#!/bin/sh
# /etc/init.d/minecraft
# version 0.5 2012-01-31 (YYYY-MM-DD)

### BEGIN INIT INFO
# Provides:   minecraft
# Required-Start: $local_fs $remote_fs
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    Minecraft server
# Description:    Init script for bukkit server.
### END INIT INFO

# Based on http://www.minecraftwiki.net/wiki/Server_startup_script

#############################
######### SETTINGS ##########
#############################

# Name of server.jar file
SERVICE="craftbukkit-1.1.0-R3.jar"

# Name to use for the screen instance
SCREEN="minecraft110"

# User that should run the server
USERNAME="minecraft"

# Path to minecraft directory
MCBASEPATH="/home/${USERNAME}"

# Initial memory usage
INITMEM="512M"

# Maximum amount of memory to use
MAXMEM="1024M"









#############################
####### DO NOT EDIT #########
#############################

INVOCATION="java -server -Xmx$MAXMEM -Xms$INITMEM -jar $SERVICE $OPTIONS"

# Where the minecraft server directory is located
MCPATH="${MCPATH}/server"

# Where the whole minecraft directory is copied when backup is ran.
BACKUP="${MCPATH}/server.bak"


screen_running(){
	if [ `screen -ls $SCREEN_NAME | grep $SCREEN_NAME` == "" ]; then
		return false;
	fi
	return true;
}

ME=`whoami`
as_user() {
	if [ $ME == $USERNAME ]; then
		sh -c "$1"
	else
		su - $USERNAME -c "$1"
	fi
}

mc_command(){
	as_user "screen -p 0 -S $SCREEN -X eval 'stuff \"$1\"\015'"
}

mc_start() {
	if [ screen_running ]; then
		echo "Tried to start but $SERVICE was already running!"
	else
		echo "$SERVICE was not running... starting."
		cd $MCPATH
		as_user "cd $MCPATH && screen -dmS $SCREEN $INVOCATION"
		sleep 3
		if screen_running
		then
			echo "$SERVICE is now running."
		else
			echo "Could not start $SERVICE."
		fi
	fi
}

mc_saveoff() {
	if [ screen_running ]; then
		echo "$SERVICE is running... suspending saves"
		mc_command "save-off"
		mc_command "save-all"
	else
		echo "$SERVICE was not running. Not suspending saves."
	fi
}

mc_saveon() {
	if [ screen_running ]; then
		echo "$SERVICE is running... re-enabling saves"
		mc_command "save-on"
	else
		echo "$SERVICE was not running. Not resuming saves."
	fi
}

mc_stop() {
	if [ screen_running ]; then
		echo "$SERVICE is running... stopping."
		mc_command "save-all"
		sleep 5
		mc_command "stop"
		sleep 10
	else
		echo "$SERVICE was not running."
	fi
	if [ screen_running ]; then
		echo "$SERVICE is still running."
		echo "$SERVICE will now receive a second stop command."
		mc_command "stop"
		sleep 10
	fi
	if [ screen_running ]; then
		echo "$SERVICE could not be shut down... still running."
	else
		echo "$SERVICE is shut down."
	fi
}

mc_backup() {
# Switching this to rsync.
#	as_user "mkdir -p $WHOLEBACKUP"
#	path=`datepath $WHOLEBACKUP/mine_`
#	as_user "cp -r $MCPATH $path"
}

case "$1" in
	start)
		# Starts the server
		mc_start
		;;
	stop)
		# Stops the server
		mc_command "say SERVER SHUTTING DOWN IN 5 SECONDS!"
		mc_stop
		;;
	restart)
		# Restarts the server
		mc_command "say SERVER REBOOT IN 5 SECONDS."
		mc_stop
		echo "sleeping for 5 seconds. Before starting server again."
		sleep 5
		mc_start
		;;
	backup)
		# Backups world
		mc_command "say Backing up world."
		mc_saveoff
		mc_backup
		mc_saveon
		mc_command "say Backup complete."
		;;
	status)
		# Shows server status
		if [ screen_running ]; then
			echo "$SERVICE is running."
		else
			echo "$SERVICE is not running."
		fi
		;;
	view)
		if [ screen_running ]; then
			echo "A screen was detected for $SCREEN_NAME."
			echo "Connecting to the screen session..."
			echo "Hold ctrl then press A, D to exit the screen session."
			sleep 3
			screen -r $SCREEN_NAME
		else
			echo "No screen found for $SCREEN_NAME."
			echo "Please manually fix this if you believes this to be in error."
		fi

		;;
	version)
		echo Craftbukkit version `awk '/Craftbukkit/ {sub(/\)/, ""); print $12}' $MCPATH/server.log`
		;;
	help)
		echo "Usage: /etc/init.d/minecraft command"
		echo ""
		echo "start - Starts the server"
		echo "stop - stops the server"
		echo "restart - restarts the server"
		echo "backup - backups the server up to $BACKUP"
		echo "status - Shows server status"
		echo "view - connects to the console"
		echo "version - returns Bukkit version"
		;;
	*)
		echo "No such command see /etc/init.d/minecraft help"
		exit 1
		;;
esac

exit 0
